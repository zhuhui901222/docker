# ssl: https://console.qcloud.com/ssl
# config: https://segmentfault.com/a/1190000015917733
# 避免泛解析 Gzip SSL log LB auth
# server {
#     listen 80 default_server;
#     server_name _;
#     return 403;
# }
# nginx+jenkins: https://wiki.jenkins.io/display/JENKINS/Jenkins+behind+an+NGinX+reverse+proxy

server {
    listen 80;
    server_name localhost default_server;

    # auth_basic           "admin";
    # auth_basic_user_file .htpasswd;

    root /var/www;
    autoindex on;
    location / {}
    location ~ \.php$ {
        fastcgi_pass fpm:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}

# http2
server {
    listen 80;
    server_name www.daydaygo.top;
    rewrite ^(.*)$ https://${server_name}$1 permanent;
}
server {
    listen 443 ssl http2;
    server_name www.daydaygo.top;
    ssl on;
    ssl_certificate daydaygo.top.crt;
    ssl_certificate_key daydaygo.top.key;
    root /var/www/https_test;
    index index.php index.html;
    location / {}
    location ~ \.php$ {
        fastcgi_pass fpm:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}

# web
server {
    listen 80;
    server_name c.daydaygo.me c.daydaygo.top;
    root /var/www/web;
    index mygoddess.html;
    location / {}
}

# yii
server {
    listen 80;
    server_name yii.daydaygo.me yii.daydaygo.top;
    index index.php;
    root /var/www/yii/frontend/web;
    # access_log /var/log/nginx/yii_access.log main;
    location / {
        try_files $uri $uri/ /index.php?$args;
        # yii module
        # if (!-e $request_filename) {
        #     rewrite ^/(.*)/web/(.*) /$1/web/index.php last;
        # }
    }
    location ~ \.php$ {
        fastcgi_pass fpm:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}

# proxy_pass
server {
    listen 80 443;
    server_name docs.docker.com;
    location / {
        proxy_pass http://docker-docs:4000;
    }
}

# grpc
# LB
# upstream grpcservers {
#     server grpc:50052;
#     server grpc:50053;
# }
# server {
#     listen 80 http2;
#     location / {
#         grpc_pass grpc://grpc:50051;
#     }
#     # with ssl
#     listen 443 ssl http2;
#     ssl_certificate ssl/cert.pem;
#     ssl_certificate_key ssl/key.pem;
#     location / {
#         grpc_pass grpcs://grpc:50051;
#     }
#     # route: packagename.servicename.methodname
#     location /helloworld.Greeter {
#         grpc_pass grpc://grpc:50052;
#     }
#     location /helloworld.Dispatcher {
#         grpc_pass grpc://grpc:50053;
#     }
#     location = /error50grpc {
#         internal;
#         default_type application/grpc;
#         add_header grpc-status 14;
#         add_header grp-message "unavailable";
#         return 204;
#     }
# }